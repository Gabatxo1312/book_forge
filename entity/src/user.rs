//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.2

use sea_orm::entity::prelude::*;
use serde::Deserialize;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Deserialize)]
#[sea_orm(table_name = "user")]
pub struct Model {
    #[sea_orm(primary_key)]
    #[serde(skip_deserializing)]
    pub id: i32,
    pub name: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {}

impl ActiveModelBehavior for ActiveModel {}


impl Model {
    pub fn find_owned_books(&self) -> Select<super::book::Entity> {
        super::book::Entity::find()
            .filter(super::book::Column::OwnerId.eq(self.id))
    }
    
    pub fn find_held_books(&self) -> Select<super::book::Entity> {
        super::book::Entity::find()
            .filter(super::book::Column::CurrentHolderId.eq(self.id))
    }
}
